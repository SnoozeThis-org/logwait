// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: logwait.proto

package logwait

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field  string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Regexp string `protobuf:"bytes,2,opt,name=regexp,proto3" json:"regexp,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{0}
}

func (x *Filter) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Filter) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

type Observable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Signature string    `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Filters   []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *Observable) Reset() {
	*x = Observable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Observable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observable) ProtoMessage() {}

func (x *Observable) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observable.ProtoReflect.Descriptor instead.
func (*Observable) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{1}
}

func (x *Observable) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Observable) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Observable) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type RegisterObserverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogInstanceToken string `protobuf:"bytes,1,opt,name=log_instance_token,json=logInstanceToken,proto3" json:"log_instance_token,omitempty"`
}

func (x *RegisterObserverRequest) Reset() {
	*x = RegisterObserverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterObserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterObserverRequest) ProtoMessage() {}

func (x *RegisterObserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterObserverRequest.ProtoReflect.Descriptor instead.
func (*RegisterObserverRequest) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterObserverRequest) GetLogInstanceToken() string {
	if x != nil {
		return x.LogInstanceToken
	}
	return ""
}

type RegisterObserverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveObservables []*Observable `protobuf:"bytes,1,rep,name=active_observables,json=activeObservables,proto3" json:"active_observables,omitempty"`
}

func (x *RegisterObserverResponse) Reset() {
	*x = RegisterObserverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterObserverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterObserverResponse) ProtoMessage() {}

func (x *RegisterObserverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterObserverResponse.ProtoReflect.Descriptor instead.
func (*RegisterObserverResponse) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterObserverResponse) GetActiveObservables() []*Observable {
	if x != nil {
		return x.ActiveObservables
	}
	return nil
}

type RejectObservable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RejectObservable) Reset() {
	*x = RejectObservable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectObservable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectObservable) ProtoMessage() {}

func (x *RejectObservable) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectObservable.ProtoReflect.Descriptor instead.
func (*RejectObservable) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{4}
}

func (x *RejectObservable) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RejectObservable) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ObserverToSnoozeThis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*ObserverToSnoozeThis_Register
	//	*ObserverToSnoozeThis_ObservedObservable
	//	*ObserverToSnoozeThis_RejectObservable
	Msg isObserverToSnoozeThis_Msg `protobuf_oneof:"msg"`
}

func (x *ObserverToSnoozeThis) Reset() {
	*x = ObserverToSnoozeThis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserverToSnoozeThis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserverToSnoozeThis) ProtoMessage() {}

func (x *ObserverToSnoozeThis) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserverToSnoozeThis.ProtoReflect.Descriptor instead.
func (*ObserverToSnoozeThis) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{5}
}

func (m *ObserverToSnoozeThis) GetMsg() isObserverToSnoozeThis_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ObserverToSnoozeThis) GetRegister() *RegisterObserverRequest {
	if x, ok := x.GetMsg().(*ObserverToSnoozeThis_Register); ok {
		return x.Register
	}
	return nil
}

func (x *ObserverToSnoozeThis) GetObservedObservable() int64 {
	if x, ok := x.GetMsg().(*ObserverToSnoozeThis_ObservedObservable); ok {
		return x.ObservedObservable
	}
	return 0
}

func (x *ObserverToSnoozeThis) GetRejectObservable() *RejectObservable {
	if x, ok := x.GetMsg().(*ObserverToSnoozeThis_RejectObservable); ok {
		return x.RejectObservable
	}
	return nil
}

type isObserverToSnoozeThis_Msg interface {
	isObserverToSnoozeThis_Msg()
}

type ObserverToSnoozeThis_Register struct {
	Register *RegisterObserverRequest `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ObserverToSnoozeThis_ObservedObservable struct {
	ObservedObservable int64 `protobuf:"varint,2,opt,name=observed_observable,json=observedObservable,proto3,oneof"`
}

type ObserverToSnoozeThis_RejectObservable struct {
	RejectObservable *RejectObservable `protobuf:"bytes,3,opt,name=reject_observable,json=rejectObservable,proto3,oneof"`
}

func (*ObserverToSnoozeThis_Register) isObserverToSnoozeThis_Msg() {}

func (*ObserverToSnoozeThis_ObservedObservable) isObserverToSnoozeThis_Msg() {}

func (*ObserverToSnoozeThis_RejectObservable) isObserverToSnoozeThis_Msg() {}

type SnoozeThisToObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*SnoozeThisToObserver_Register
	//	*SnoozeThisToObserver_NewObservable
	//	*SnoozeThisToObserver_CancelObservable
	Msg isSnoozeThisToObserver_Msg `protobuf_oneof:"msg"`
}

func (x *SnoozeThisToObserver) Reset() {
	*x = SnoozeThisToObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnoozeThisToObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnoozeThisToObserver) ProtoMessage() {}

func (x *SnoozeThisToObserver) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnoozeThisToObserver.ProtoReflect.Descriptor instead.
func (*SnoozeThisToObserver) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{6}
}

func (m *SnoozeThisToObserver) GetMsg() isSnoozeThisToObserver_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *SnoozeThisToObserver) GetRegister() *RegisterObserverResponse {
	if x, ok := x.GetMsg().(*SnoozeThisToObserver_Register); ok {
		return x.Register
	}
	return nil
}

func (x *SnoozeThisToObserver) GetNewObservable() *Observable {
	if x, ok := x.GetMsg().(*SnoozeThisToObserver_NewObservable); ok {
		return x.NewObservable
	}
	return nil
}

func (x *SnoozeThisToObserver) GetCancelObservable() int64 {
	if x, ok := x.GetMsg().(*SnoozeThisToObserver_CancelObservable); ok {
		return x.CancelObservable
	}
	return 0
}

type isSnoozeThisToObserver_Msg interface {
	isSnoozeThisToObserver_Msg()
}

type SnoozeThisToObserver_Register struct {
	Register *RegisterObserverResponse `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type SnoozeThisToObserver_NewObservable struct {
	NewObservable *Observable `protobuf:"bytes,2,opt,name=new_observable,json=newObservable,proto3,oneof"`
}

type SnoozeThisToObserver_CancelObservable struct {
	CancelObservable int64 `protobuf:"varint,3,opt,name=cancel_observable,json=cancelObservable,proto3,oneof"`
}

func (*SnoozeThisToObserver_Register) isSnoozeThisToObserver_Msg() {}

func (*SnoozeThisToObserver_NewObservable) isSnoozeThisToObserver_Msg() {}

func (*SnoozeThisToObserver_CancelObservable) isSnoozeThisToObserver_Msg() {}

type RegisterScannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterScannerRequest) Reset() {
	*x = RegisterScannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterScannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterScannerRequest) ProtoMessage() {}

func (x *RegisterScannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterScannerRequest.ProtoReflect.Descriptor instead.
func (*RegisterScannerRequest) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{7}
}

type RegisterScannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveObservables []*Observable `protobuf:"bytes,1,rep,name=active_observables,json=activeObservables,proto3" json:"active_observables,omitempty"`
}

func (x *RegisterScannerResponse) Reset() {
	*x = RegisterScannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterScannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterScannerResponse) ProtoMessage() {}

func (x *RegisterScannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterScannerResponse.ProtoReflect.Descriptor instead.
func (*RegisterScannerResponse) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterScannerResponse) GetActiveObservables() []*Observable {
	if x != nil {
		return x.ActiveObservables
	}
	return nil
}

type ScannerToObserver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*ScannerToObserver_Register
	//	*ScannerToObserver_ObservedObservable
	Msg isScannerToObserver_Msg `protobuf_oneof:"msg"`
}

func (x *ScannerToObserver) Reset() {
	*x = ScannerToObserver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScannerToObserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerToObserver) ProtoMessage() {}

func (x *ScannerToObserver) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerToObserver.ProtoReflect.Descriptor instead.
func (*ScannerToObserver) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{9}
}

func (m *ScannerToObserver) GetMsg() isScannerToObserver_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ScannerToObserver) GetRegister() *RegisterScannerRequest {
	if x, ok := x.GetMsg().(*ScannerToObserver_Register); ok {
		return x.Register
	}
	return nil
}

func (x *ScannerToObserver) GetObservedObservable() int64 {
	if x, ok := x.GetMsg().(*ScannerToObserver_ObservedObservable); ok {
		return x.ObservedObservable
	}
	return 0
}

type isScannerToObserver_Msg interface {
	isScannerToObserver_Msg()
}

type ScannerToObserver_Register struct {
	Register *RegisterScannerRequest `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ScannerToObserver_ObservedObservable struct {
	ObservedObservable int64 `protobuf:"varint,2,opt,name=observed_observable,json=observedObservable,proto3,oneof"`
}

func (*ScannerToObserver_Register) isScannerToObserver_Msg() {}

func (*ScannerToObserver_ObservedObservable) isScannerToObserver_Msg() {}

type ObserverToScanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*ObserverToScanner_Register
	//	*ObserverToScanner_NewObservable
	//	*ObserverToScanner_CancelObservable
	Msg isObserverToScanner_Msg `protobuf_oneof:"msg"`
}

func (x *ObserverToScanner) Reset() {
	*x = ObserverToScanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logwait_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserverToScanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserverToScanner) ProtoMessage() {}

func (x *ObserverToScanner) ProtoReflect() protoreflect.Message {
	mi := &file_logwait_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserverToScanner.ProtoReflect.Descriptor instead.
func (*ObserverToScanner) Descriptor() ([]byte, []int) {
	return file_logwait_proto_rawDescGZIP(), []int{10}
}

func (m *ObserverToScanner) GetMsg() isObserverToScanner_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ObserverToScanner) GetRegister() *RegisterScannerResponse {
	if x, ok := x.GetMsg().(*ObserverToScanner_Register); ok {
		return x.Register
	}
	return nil
}

func (x *ObserverToScanner) GetNewObservable() *Observable {
	if x, ok := x.GetMsg().(*ObserverToScanner_NewObservable); ok {
		return x.NewObservable
	}
	return nil
}

func (x *ObserverToScanner) GetCancelObservable() int64 {
	if x, ok := x.GetMsg().(*ObserverToScanner_CancelObservable); ok {
		return x.CancelObservable
	}
	return 0
}

type isObserverToScanner_Msg interface {
	isObserverToScanner_Msg()
}

type ObserverToScanner_Register struct {
	Register *RegisterScannerResponse `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type ObserverToScanner_NewObservable struct {
	NewObservable *Observable `protobuf:"bytes,2,opt,name=new_observable,json=newObservable,proto3,oneof"`
}

type ObserverToScanner_CancelObservable struct {
	CancelObservable int64 `protobuf:"varint,3,opt,name=cancel_observable,json=cancelObservable,proto3,oneof"`
}

func (*ObserverToScanner_Register) isObserverToScanner_Msg() {}

func (*ObserverToScanner_NewObservable) isObserverToScanner_Msg() {}

func (*ObserverToScanner_CancelObservable) isObserverToScanner_Msg() {}

var File_logwait_proto protoreflect.FileDescriptor

var file_logwait_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e,
	0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x22, 0x36, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x22,
	0x74, 0x0a, 0x0a, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x47, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f,
	0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d,
	0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f,
	0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x3c, 0x0a,
	0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x14,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65,
	0x54, 0x68, 0x69, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f,
	0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x12, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe9, 0x01, 0x0a, 0x14, 0x53, 0x6e, 0x6f, 0x6f, 0x7a,
	0x65, 0x54, 0x68, 0x69, 0x73, 0x54, 0x6f, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x4e, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68,
	0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x4b, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e,
	0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74,
	0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6e,
	0x65, 0x77, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x11,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x17,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65,
	0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x53,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x4c, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74,
	0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x13, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x12, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe5, 0x01, 0x0a, 0x11, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x4d,
	0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69,
	0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x4b, 0x0a,
	0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f,
	0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x65, 0x77,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x11, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x32, 0x87, 0x01, 0x0a, 0x14, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x54, 0x68, 0x69, 0x73, 0x4c,
	0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73,
	0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69,
	0x74, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x6e, 0x6f, 0x6f,
	0x7a, 0x65, 0x54, 0x68, 0x69, 0x73, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f,
	0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x2e,
	0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x54, 0x68, 0x69, 0x73, 0x54, 0x6f, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0x7c, 0x0a, 0x0f, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x67, 0x77, 0x61, 0x69, 0x74, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6e,
	0x6f, 0x6f, 0x7a, 0x65, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74,
	0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x54, 0x68, 0x69,
	0x73, 0x2d, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x77, 0x61, 0x69, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logwait_proto_rawDescOnce sync.Once
	file_logwait_proto_rawDescData = file_logwait_proto_rawDesc
)

func file_logwait_proto_rawDescGZIP() []byte {
	file_logwait_proto_rawDescOnce.Do(func() {
		file_logwait_proto_rawDescData = protoimpl.X.CompressGZIP(file_logwait_proto_rawDescData)
	})
	return file_logwait_proto_rawDescData
}

var file_logwait_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_logwait_proto_goTypes = []interface{}{
	(*Filter)(nil),                   // 0: com.snoozethis.logwait.Filter
	(*Observable)(nil),               // 1: com.snoozethis.logwait.Observable
	(*RegisterObserverRequest)(nil),  // 2: com.snoozethis.logwait.RegisterObserverRequest
	(*RegisterObserverResponse)(nil), // 3: com.snoozethis.logwait.RegisterObserverResponse
	(*RejectObservable)(nil),         // 4: com.snoozethis.logwait.RejectObservable
	(*ObserverToSnoozeThis)(nil),     // 5: com.snoozethis.logwait.ObserverToSnoozeThis
	(*SnoozeThisToObserver)(nil),     // 6: com.snoozethis.logwait.SnoozeThisToObserver
	(*RegisterScannerRequest)(nil),   // 7: com.snoozethis.logwait.RegisterScannerRequest
	(*RegisterScannerResponse)(nil),  // 8: com.snoozethis.logwait.RegisterScannerResponse
	(*ScannerToObserver)(nil),        // 9: com.snoozethis.logwait.ScannerToObserver
	(*ObserverToScanner)(nil),        // 10: com.snoozethis.logwait.ObserverToScanner
}
var file_logwait_proto_depIdxs = []int32{
	0,  // 0: com.snoozethis.logwait.Observable.filters:type_name -> com.snoozethis.logwait.Filter
	1,  // 1: com.snoozethis.logwait.RegisterObserverResponse.active_observables:type_name -> com.snoozethis.logwait.Observable
	2,  // 2: com.snoozethis.logwait.ObserverToSnoozeThis.register:type_name -> com.snoozethis.logwait.RegisterObserverRequest
	4,  // 3: com.snoozethis.logwait.ObserverToSnoozeThis.reject_observable:type_name -> com.snoozethis.logwait.RejectObservable
	3,  // 4: com.snoozethis.logwait.SnoozeThisToObserver.register:type_name -> com.snoozethis.logwait.RegisterObserverResponse
	1,  // 5: com.snoozethis.logwait.SnoozeThisToObserver.new_observable:type_name -> com.snoozethis.logwait.Observable
	1,  // 6: com.snoozethis.logwait.RegisterScannerResponse.active_observables:type_name -> com.snoozethis.logwait.Observable
	7,  // 7: com.snoozethis.logwait.ScannerToObserver.register:type_name -> com.snoozethis.logwait.RegisterScannerRequest
	8,  // 8: com.snoozethis.logwait.ObserverToScanner.register:type_name -> com.snoozethis.logwait.RegisterScannerResponse
	1,  // 9: com.snoozethis.logwait.ObserverToScanner.new_observable:type_name -> com.snoozethis.logwait.Observable
	5,  // 10: com.snoozethis.logwait.SnoozeThisLogService.Communicate:input_type -> com.snoozethis.logwait.ObserverToSnoozeThis
	9,  // 11: com.snoozethis.logwait.ObserverService.Communicate:input_type -> com.snoozethis.logwait.ScannerToObserver
	6,  // 12: com.snoozethis.logwait.SnoozeThisLogService.Communicate:output_type -> com.snoozethis.logwait.SnoozeThisToObserver
	10, // 13: com.snoozethis.logwait.ObserverService.Communicate:output_type -> com.snoozethis.logwait.ObserverToScanner
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_logwait_proto_init() }
func file_logwait_proto_init() {
	if File_logwait_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logwait_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Observable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterObserverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterObserverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectObservable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserverToSnoozeThis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnoozeThisToObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterScannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterScannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScannerToObserver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logwait_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserverToScanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_logwait_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ObserverToSnoozeThis_Register)(nil),
		(*ObserverToSnoozeThis_ObservedObservable)(nil),
		(*ObserverToSnoozeThis_RejectObservable)(nil),
	}
	file_logwait_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*SnoozeThisToObserver_Register)(nil),
		(*SnoozeThisToObserver_NewObservable)(nil),
		(*SnoozeThisToObserver_CancelObservable)(nil),
	}
	file_logwait_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ScannerToObserver_Register)(nil),
		(*ScannerToObserver_ObservedObservable)(nil),
	}
	file_logwait_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ObserverToScanner_Register)(nil),
		(*ObserverToScanner_NewObservable)(nil),
		(*ObserverToScanner_CancelObservable)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logwait_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_logwait_proto_goTypes,
		DependencyIndexes: file_logwait_proto_depIdxs,
		MessageInfos:      file_logwait_proto_msgTypes,
	}.Build()
	File_logwait_proto = out.File
	file_logwait_proto_rawDesc = nil
	file_logwait_proto_goTypes = nil
	file_logwait_proto_depIdxs = nil
}
