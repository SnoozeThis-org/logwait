syntax = "proto3";

package com.snoozethis.logwait;

option go_package = "github.com/SnoozeThis-org/logwait/proto";

import "logwait_common.proto";

service SnoozeThisLogService {
	rpc Communicate(stream ObserverToSnoozeThis) returns (stream SnoozeThisToObserver) {}
}

message RegisterObserverRequest {
	string log_instance_token = 1;

	// Send a version number so we can see how far we need to maintain backwards compatibility.
	int32 observer_protocol_version = 2;
}

message RegisterObserverResponse {
	repeated Observable active_observables = 1;

	// The url you've registered with SnoozeThis. The Observer should use this URL as the base for filter-URLs to ensure the domain is understood by SnoozeThis.
	string registered_url = 2;
}

message ObserverToSnoozeThis {
	oneof msg {
		RegisterObserverRequest register = 1;
		string observed_observable = 2;
		RejectObservable reject_observable = 3;
	}
}

message SnoozeThisToObserver {
	oneof msg {
		RegisterObserverResponse register = 1;
		Observable new_observable = 2;
		string cancel_observable = 3;
	}
}
